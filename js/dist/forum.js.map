{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@datlechin/flarum-discussion-overview/webpack/bootstrap","webpack://@datlechin/flarum-discussion-overview/webpack/runtime/compat get default export","webpack://@datlechin/flarum-discussion-overview/webpack/runtime/define property getters","webpack://@datlechin/flarum-discussion-overview/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['forum/app']\"","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@datlechin/flarum-discussion-overview/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['common/Component']\"","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['common/components/Link']\"","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@datlechin/flarum-discussion-overview/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@datlechin/flarum-discussion-overview/./src/forum/components/DiscussionOverview.tsx","webpack://@datlechin/flarum-discussion-overview/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datlechin/flarum-discussion-overview/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStream'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","import Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport Discussion from 'flarum/common/models/Discussion';\nimport User from 'flarum/common/models/User';\nimport Post from 'flarum/common/models/Post';\nimport Link from 'flarum/common/components/Link';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport avatar from 'flarum/common/helpers/avatar';\nimport app from 'flarum/forum/app';\n\ninterface DiscussionOverviewAttrs {\n  discussion: Discussion;\n}\n\nexport default class DiscussionOverview extends Component<DiscussionOverviewAttrs> {\n  discussion!: Discussion;\n\n  oninit(vnode: Mithril.Vnode<DiscussionOverviewAttrs, this>): void {\n    super.oninit(vnode);\n    this.discussion = this.attrs.discussion;\n  }\n\n  view() {\n    const discussion = this.discussion;\n    const posts = discussion.posts() as Post[];\n    const participantCount = discussion.attribute<number>('participantCount');\n    const lastPost = posts?.[posts.length - 1] as Post;\n\n    const participantUsers = new Set<User>();\n    posts.forEach((post) => {\n      const user = post.user();\n      if (user) {\n        participantUsers.add(user);\n      }\n    });\n\n    return (\n      <>\n        <ul className=\"DiscussionOverview-list\">\n          <li className=\"created-at\">\n            <h4>{app.translator.trans('datlechin-discussion-overview.forum.created')}</h4>\n            <div className=\"time\">{dayjs(discussion.createdAt()).fromNow()}</div>\n          </li>\n          <li className=\"last-reply\">\n            <h4>{app.translator.trans('datlechin-discussion-overview.forum.last_reply')}</h4>\n            <Link href={app.route.post(lastPost)}>\n              <div className=\"time\">\n                {avatar(lastPost.user())}\n                {dayjs(discussion.lastPostedAt()).fromNow()}\n              </div>\n            </Link>\n          </li>\n          <li className=\"replies\">\n            <span className=\"number\">{discussion.replyCount()}</span>\n            <h4>{app.translator.trans('datlechin-discussion-overview.forum.replies')}</h4>\n          </li>\n          {app.initializers.has('michaelbelgium-discussion-views') ? (\n            <li className=\"views\">\n              <span className=\"number\">{discussion.viewCount()}</span>\n              <h4>{app.translator.trans('datlechin-discussion-overview.forum.views')}</h4>\n            </li>\n          ) : null}\n          <li className=\"users\">\n            <span className=\"number\">{participantCount}</span>\n            <h4>{app.translator.trans('datlechin-discussion-overview.forum.users')}</h4>\n          </li>\n          <li className=\"likes\">\n            <span className=\"number\">{posts[0].attribute('likesCount') || 0}</span>\n            <h4>{app.translator.trans('datlechin-discussion-overview.forum.likes')}</h4>\n          </li>\n          <li className=\"avatars\">\n            <div className=\"user-list\">\n              {Array.from(participantUsers).map((user: User) => (\n                <Tooltip key={user.id()} text={user.attribute('username')}>\n                  <Link href={app.route.user(user)}>{avatar(user)}</Link>\n                </Tooltip>\n              ))}\n            </div>\n          </li>\n        </ul>\n      </>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport DiscussionOverview from './components/DiscussionOverview';\n\napp.initializers.add('datlechin/flarum-discussion-overview', () => {\n  extend(PostStream.prototype, 'oncreate', function () {\n    const postStream: HTMLElement | null = document.querySelector('.CommentPost div');\n\n    if (!postStream) {\n      return;\n    }\n\n    const discussion = this.discussion;\n\n    const div = document.createElement('div');\n    div.className = 'DiscussionOverview';\n\n    m.mount(postStream.appendChild(div), {\n      view: function () {\n        return m(DiscussionOverview, { discussion });\n      },\n    });\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","DiscussionOverview","_Component","_this","_len","arguments","length","args","Array","_key","apply","concat","discussion","create","constructor","_proto","oninit","vnode","this","attrs","view","posts","participantCount","attribute","lastPost","participantUsers","Set","forEach","post","user","add","m","'['","className","app","trans","dayjs","createdAt","fromNow","Link","href","avatar","lastPostedAt","replyCount","has","viewCount","from","map","Tooltip","id","text","Component","extend","PostStream","postStream","document","querySelector","div","createElement","mount","appendChild"],"sourceRoot":""}